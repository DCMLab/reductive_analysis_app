.progress {
  position: relative;
}

.progress__inner {
  &:indeterminate {
    & + .progress__bar,
    & ~ .progress__label {
      opacity: 0;
    }
  }
}

.progress__label {
  position: relative;
  transition: opacity 1s $in-out-quad;
}

.progress__bar {
  position: absolute;
  inset: 0;

  transform: scaleX(v(progress, 0));
  transform-origin: left;

  background: v(accent);

  // transition: .3s $in-out-quad;
  // transition-property: opacity, transform;
}

.progress__range {
  position: absolute;
  inset: 0;

  opacity: 0;
}

// ------------------
// RANGE
// ------------------

.progresss {
  --progress: 0;
  --progress-percent: var(--progress) * 100%;
  --progress-thumb: .8rem;
  --progress-track-h: .4rem;
  --progress-track-radius: calc(var(--progress-track-h) / 2);

  position: relative;

  // track
  height: v(progress-track-h);
  background: $lacquered-licorice;
  border-radius: v(progress-track-radius);

  > :not(.progresss__inputRange) {
    pointer-events: none;
  }
}

.progresss__inputRange {
  position: absolute;
  inset: 0;
  size: 100%;

  opacity: 0;
}

/**
 * Progress container with hidden overflow. The `overlow: hidden` canâ€™t be on
 * `.progress`, otherwise it would have hide the sliding thumb.
 */
.progresss__progress {
  position: absolute;
  inset: 0;

  overflow: hidden;

  background: $lacquered-licorice;
  border-radius: v(progress-track-radius);

  // progress
  &::after {
    content: '';
    position: absolute;
    inset: 0;

    background: currentColor;

    // Position the progress bar and compensate for the clamped thumb.
    transform: translateX(calc(
      -100% /* base position is off screen, on the left, thus invisible */
      + var(--progress-percent) /* partly visible depending on progress */
      + (var(--progress) - .5) * (var(--progress-thumb) * -.5)
      /* ðŸ‘† slightly adjust for the thumb: */
      /* -1/4 thumb when progress is 0 */
      /*  0         when progress is 0.5 */
      /* +1/4 thumb when progress is 1 */
    ));
  }
}

// The pseudo element is the real thumb. The container helps the translation.
.progresss__thumb {
  position: absolute;
  inset: 0;
  transform: translateX(calc(var(--progress-percent) - 100%));

  // thumb
  &::after {
    content: '';
    size: v(progress-thumb);

    position: absolute;
    top: 50%;
    right: 0;

    // Clamp thumb progress so it never goes beyond the track.
    --progress-thumb-x: calc(100% - var(--progress-percent));
    transform: translate(var(--progress-thumb-x, 0), -50%);

    background: currentColor;
    border-radius: 50%;
  }
}
